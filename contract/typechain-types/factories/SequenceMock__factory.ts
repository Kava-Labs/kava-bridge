/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SequenceMock, SequenceMockInterface } from "../SequenceMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161046e38038061046e8339818101604052810190610032919061014a565b806100657f0e7452f489753063f100160bee29fe12496f2e1569fd074a56108cbfc325005560001b61010960201b60201c565b6100977f7b907cd94ef74e0e4b5371400185799c6cfc94ff4203fd009f6801ed7741595c60001b61010960201b60201c565b6100c97ffe08be7fed07b6f354dcc271e8a7b171d74b256fd2bf5b7599f56d219183ab6c60001b61010960201b60201c565b80600081905550506101037fa48c11a120401c7ed93df3bcfe33e9ac1c8009737c08af38251ef0ac88e904d360001b61010c60201b60201c565b50610177565b50565b50565b600080fd5b6000819050919050565b61012781610114565b811461013257600080fd5b50565b6000815190506101448161011e565b92915050565b6000602082840312156101605761015f61010f565b5b600061016e84828501610135565b91505092915050565b6102e8806101866000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636d4ce63c1461003b578063d09de08a14610059575b600080fd5b610043610063565b6040516100509190610297565b60405180910390f35b6100616100f6565b005b60006100917fccd058f0e111c41ce29c9bfd3a90866bfc245ff0d6a3dbc6125a764546d917a960001b610184565b6100bd7fac7c42158f6dd5297456e2fb1a4db0bf06442e746690cb4baf34297df14c0adb60001b610184565b6100e97ffa078f075f09cb26657e262981e2605f8a15f1338db9881e029a7653de6f71e360001b610184565b6100f1610187565b905090565b6101227fa6012a34bc4894c8ac0297d605bcafcf60a027f16c829ec5ba0b79bddfda1fcb60001b610184565b61014e7f100a6054b8948223cd0077b84e4c0bd581d5fe53055adf5e84ec25aa3b4c934960001b610184565b61017a7f2a02208abda5e6f23d3bcd7374648ff63571f148ef388a3bfce834a47cd6dc8860001b610184565b610182610215565b565b50565b60006101b57f6c6d68c4f45959249e9685493d74502f6fadb21e89e4367052edc73d46e678df60001b61027b565b6101e17f363dd52fb8adcec8594c26feb17478f6bd72157f93f91c425fcc36287aafaac960001b61027b565b61020d7fd426b2e7f4fda8fefd742a68199f2e0de79aaffd9c6209dd3f39cdc096323b2c60001b61027b565b600054905090565b6102417f70bbb4e5ca07e5543daf8e3496c4ef4496e8440cba38fd44bd968ce665c5a21a60001b61027b565b61026d7fd1478e127ca548edc122f109a68d3ca6928f506b5160afe9a3d37a22033f13d460001b61027b565b600160005401600081905550565b50565b6000819050919050565b6102918161027e565b82525050565b60006020820190506102ac6000830184610288565b9291505056fea26469706673582212204a8ff593c4102a3c4eb23501d673e9a2f25da19b377537125c1048e99257101264736f6c63430008090033";

type SequenceMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SequenceMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SequenceMock__factory extends ContractFactory {
  constructor(...args: SequenceMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SequenceMock";
  }

  deploy(
    initialValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SequenceMock> {
    return super.deploy(initialValue, overrides || {}) as Promise<SequenceMock>;
  }
  getDeployTransaction(
    initialValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialValue, overrides || {});
  }
  attach(address: string): SequenceMock {
    return super.attach(address) as SequenceMock;
  }
  connect(signer: Signer): SequenceMock__factory {
    return super.connect(signer) as SequenceMock__factory;
  }
  static readonly contractName: "SequenceMock";
  public readonly contractName: "SequenceMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequenceMockInterface {
    return new utils.Interface(_abi) as SequenceMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequenceMock {
    return new Contract(address, _abi, signerOrProvider) as SequenceMock;
  }
}
