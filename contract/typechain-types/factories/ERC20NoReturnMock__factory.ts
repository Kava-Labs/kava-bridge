/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20NoReturnMock,
  ERC20NoReturnMockInterface,
} from "../ERC20NoReturnMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610640806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063095ea7b31461005c57806323b872dd146100785780633ba93f2614610094578063a9059cbb146100b0578063dd62ed3e146100cc575b600080fd5b610076600480360381019061007191906104e0565b6100fc565b005b610092600480360381019061008d9190610520565b61018c565b005b6100ae60048036038101906100a99190610573565b61021d565b005b6100ca60048036038101906100c591906104e0565b6102e7565b005b6100e660048036038101906100e191906105a0565b610377565b6040516100f391906105ef565b60405180910390f35b6101287f1ceacd5c5e242caead7a3f32859931d3d98247ed9cd885a77fdd79906d8b463560001b610444565b6101547f39825061dee721b72ecd26155eee68b6a1ad1b66e18eef8befbffaad5d34a6f660001b610444565b6101807f9f98c9c1fe3fa95c1703217772586fdd3a3dac95637f1a73cfb79a4126a8454b60001b610444565b60006001819055505050565b6101b87fa820af65a2dcd4d6340870299640fdbe96dcad21f47096f64afb890cb380675b60001b610444565b6101e47f81675d26d1c4b116e9b22fdf73222cf037e059e7c8d65b7b8acb0eba876a8fab60001b610444565b6102107f33a6b6d3f5e9b868013bfbaf5add381600e8be6c8dbc80363cbf321c2261f62560001b610444565b6000600181905550505050565b6102497f4420971bd960c3bfa06464eda847f8dd3fa2549394ed74c3ce7d25e4bb36c4d560001b610444565b6102757f2210f644e8253fa70681e23446cae79449570a267a6719cffcc715355a54245560001b610444565b6102a17f282e3939faff75b1f3b35d1d510e03ce436c8b0883e9dbe9510008d175082a7960001b610444565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6103137fb3fa302c3e66176f0de5d835023f7bb17f5da07c914859e53f9c38acbf6dcb2960001b610444565b61033f7fdd231f51eb7b891a8962632666558546a49d3dd5d4b2c8330ca0d2cd3c51d26660001b610444565b61036b7f4760d5a5a6917dd2486c6b28934946117a33cceac9721bad0c9681785671998f60001b610444565b60006001819055505050565b60006103a57f6fea7906b2da02e782a373d19c8d2af899b6c8bc7994777a0c013ff1c5fe4e1060001b610444565b6103d17facb22ce7a6b97e7d498ca0836a0ab0a204214df3762552b7475bc567d42b596e60001b610444565b6103fd7f667eed84ddcb71af2d996e70cef84d096a01e37e9942f0b1bd620954f6f6f88760001b610444565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104778261044c565b9050919050565b6104878161046c565b811461049257600080fd5b50565b6000813590506104a48161047e565b92915050565b6000819050919050565b6104bd816104aa565b81146104c857600080fd5b50565b6000813590506104da816104b4565b92915050565b600080604083850312156104f7576104f6610447565b5b600061050585828601610495565b9250506020610516858286016104cb565b9150509250929050565b60008060006060848603121561053957610538610447565b5b600061054786828701610495565b935050602061055886828701610495565b9250506040610569868287016104cb565b9150509250925092565b60006020828403121561058957610588610447565b5b6000610597848285016104cb565b91505092915050565b600080604083850312156105b7576105b6610447565b5b60006105c585828601610495565b92505060206105d685828601610495565b9150509250929050565b6105e9816104aa565b82525050565b600060208201905061060460008301846105e0565b9291505056fea2646970667358221220b7b5657782502f41c37e733a33d0d4710211d9dacc5071d64f7899ccc7c65b7264736f6c63430008090033";

type ERC20NoReturnMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20NoReturnMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20NoReturnMock__factory extends ContractFactory {
  constructor(...args: ERC20NoReturnMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20NoReturnMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20NoReturnMock> {
    return super.deploy(overrides || {}) as Promise<ERC20NoReturnMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20NoReturnMock {
    return super.attach(address) as ERC20NoReturnMock;
  }
  connect(signer: Signer): ERC20NoReturnMock__factory {
    return super.connect(signer) as ERC20NoReturnMock__factory;
  }
  static readonly contractName: "ERC20NoReturnMock";
  public readonly contractName: "ERC20NoReturnMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20NoReturnMockInterface {
    return new utils.Interface(_abi) as ERC20NoReturnMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20NoReturnMock {
    return new Contract(address, _abi, signerOrProvider) as ERC20NoReturnMock;
  }
}
