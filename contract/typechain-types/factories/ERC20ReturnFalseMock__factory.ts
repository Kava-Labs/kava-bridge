/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20ReturnFalseMock,
  ERC20ReturnFalseMockInterface,
} from "../ERC20ReturnFalseMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e9806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063095ea7b31461005157806323b872dd14610081578063a9059cbb146100b1578063dd62ed3e146100e1575b600080fd5b61006b60048036038101906100669190610603565b610111565b604051610078919061065e565b60405180910390f35b61009b60048036038101906100969190610679565b610201565b6040516100a8919061065e565b60405180910390f35b6100cb60048036038101906100c69190610603565b6102f2565b6040516100d8919061065e565b60405180910390f35b6100fb60048036038101906100f691906106cc565b6103e2565b604051610108919061071b565b60405180910390f35b600061013f7fa0b4b46eb22ddaabfc56a3a2458f2646cbfbc3ea66b6eca42b8124462b8762bd60001b610567565b61016b7fd4724a91cd2b482ba5c88ab5245e794f1b491211fe878762006634c2d7e52f2860001b610567565b6101977f529ddb2918b709066186e7ff7fdbdc57a2888c3b87cf8ba606cd7fa77c1b58b660001b610567565b60006001819055506101cb7f43b834d9032e66f05f1b90e89f8379c6d9122714a6e786c7ac3692239b88700660001b610567565b6101f77fed60ac4852e820bbed9c97810772197aa104e446caee1b3942e7ad211a50695c60001b610567565b6000905092915050565b600061022f7fce0510bee80973bcf71596d720d73846bd27ed0ad4eb92919133a3daeb13e23b60001b610567565b61025b7f372070a3dafc4f581082b7bc926570ba889c924e763285602d5e984844359f1260001b610567565b6102877fd7ebb722bd97c16b620e1765e531d45e7dfa599175264f57134529240102abd660001b610567565b60006001819055506102bb7f2e21abc88277138cd904d0c9ec0150556e5d3f49143e2d9b697448aa6244955360001b610567565b6102e77f36dc03de3b0e16b82dccf5e004de22673ca45377c666a14a4ee7495cb1ed7e8f60001b610567565b600090509392505050565b60006103207ffb09b982007a4dea75700270404389f5b02028ac235a57a89ec2ae93a2e3e31c60001b610567565b61034c7f50905d03697c8293844bd13cb1cf97534f72df6284bb4dccd11baa4917c3787360001b610567565b6103787f5bd69e415788354a02184a9ed10b604a64d11dea3ab16792ddc7385b9b7da91660001b610567565b60006001819055506103ac7fceb666058fd790cb4cc426f5690a259a0f66c0653d3d518197413d731f3b59c160001b610567565b6103d87fbe79a43b2d305da4d74792a1fb64c347635e91785e75d0f0f36346182511eeed60001b610567565b6000905092915050565b60006104107f9db512d5ab32ae40172e647df8e117cf176cb5996f4174e703e4556ca82039c960001b610567565b61043c7fceb4518f54053fb08385738f46599a1a60edbf555b7c667b452261d0c1ebb77c60001b610567565b6104687faa97451a51834f076b5281863027253568f8dc84412b40fde0dc66d052cf839260001b610567565b6104947f7639563bdeb2bd2cffd30c0fd1dc56dfbb78f50ccc1e6a8a5c2d5562ea5233d460001b610567565b6000600154146104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d090610793565b60405180910390fd5b6105057f37f8ca24678bb816e33101a65b3cf8a74826f67e6d5a70d5887b2eff58510f5760001b610567565b6105317ff5b1048a4c37eff41fa6f5ec373408cefe88648d5b91d5b2972de052d2a27b6e60001b610567565b61055d7f439ca6cdabfb8ee76a1c0ab243b4f4e2fd7561e42307acd125c3cd9466d2b3a860001b610567565b6000905092915050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059a8261056f565b9050919050565b6105aa8161058f565b81146105b557600080fd5b50565b6000813590506105c7816105a1565b92915050565b6000819050919050565b6105e0816105cd565b81146105eb57600080fd5b50565b6000813590506105fd816105d7565b92915050565b6000806040838503121561061a5761061961056a565b5b6000610628858286016105b8565b9250506020610639858286016105ee565b9150509250929050565b60008115159050919050565b61065881610643565b82525050565b6000602082019050610673600083018461064f565b92915050565b6000806000606084860312156106925761069161056a565b5b60006106a0868287016105b8565b93505060206106b1868287016105b8565b92505060406106c2868287016105ee565b9150509250925092565b600080604083850312156106e3576106e261056a565b5b60006106f1858286016105b8565b9250506020610702858286016105b8565b9150509250929050565b610715816105cd565b82525050565b6000602082019050610730600083018461070c565b92915050565b600082825260208201905092915050565b7f64756d6d7920696e76616c696400000000000000000000000000000000000000600082015250565b600061077d600d83610736565b915061078882610747565b602082019050919050565b600060208201905081810360008301526107ac81610770565b905091905056fea264697066735822122018b642d2256a18c1721b0400c25a604945bbaf531cb8da2e4d9f2b9f350cc0eb64736f6c63430008090033";

type ERC20ReturnFalseMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ReturnFalseMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20ReturnFalseMock__factory extends ContractFactory {
  constructor(...args: ERC20ReturnFalseMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC20ReturnFalseMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20ReturnFalseMock> {
    return super.deploy(overrides || {}) as Promise<ERC20ReturnFalseMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20ReturnFalseMock {
    return super.attach(address) as ERC20ReturnFalseMock;
  }
  connect(signer: Signer): ERC20ReturnFalseMock__factory {
    return super.connect(signer) as ERC20ReturnFalseMock__factory;
  }
  static readonly contractName: "ERC20ReturnFalseMock";
  public readonly contractName: "ERC20ReturnFalseMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20ReturnFalseMockInterface {
    return new utils.Interface(_abi) as ERC20ReturnFalseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20ReturnFalseMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20ReturnFalseMock;
  }
}
