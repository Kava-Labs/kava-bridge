/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Withdrawer, WithdrawerInterface } from "../Withdrawer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "toAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d44cc24314610030575b600080fd5b61004a600480360381019061004591906101e1565b61004c565b005b6100787fba820a1b7600a8b837900b94c9fe537343a33dec7e31ee7a4eff48bcb4e7bb3160001b610145565b6100a47f68146978da037cabac10806befac3910b5213e62706d68707ca2fedbb309abb060001b610145565b6100d07f8e0bb6ea7674cf7484bd1568c4dd926431574f252d6d6672a1abdea33628935260001b610145565b8373ffffffffffffffffffffffffffffffffffffffff16639555a9428484846040518463ffffffff1660e01b815260040161010d93929190610266565b600060405180830381600087803b15801561012757600080fd5b505af115801561013b573d6000803e3d6000fd5b5050505050505050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101788261014d565b9050919050565b6101888161016d565b811461019357600080fd5b50565b6000813590506101a58161017f565b92915050565b6000819050919050565b6101be816101ab565b81146101c957600080fd5b50565b6000813590506101db816101b5565b92915050565b600080600080608085870312156101fb576101fa610148565b5b600061020987828801610196565b945050602061021a87828801610196565b935050604061022b87828801610196565b925050606061023c878288016101cc565b91505092959194509250565b6102518161016d565b82525050565b610260816101ab565b82525050565b600060608201905061027b6000830186610248565b6102886020830185610248565b6102956040830184610257565b94935050505056fea2646970667358221220e8856f73f5932de19940c9b91cd554b8e0def0d598fff2278b4576aac8d2891f64736f6c63430008090033";

type WithdrawerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdrawer__factory extends ContractFactory {
  constructor(...args: WithdrawerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Withdrawer";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Withdrawer> {
    return super.deploy(overrides || {}) as Promise<Withdrawer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Withdrawer {
    return super.attach(address) as Withdrawer;
  }
  connect(signer: Signer): Withdrawer__factory {
    return super.connect(signer) as Withdrawer__factory;
  }
  static readonly contractName: "Withdrawer";
  public readonly contractName: "Withdrawer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawerInterface {
    return new utils.Interface(_abi) as WithdrawerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdrawer {
    return new Contract(address, _abi, signerOrProvider) as Withdrawer;
  }
}
