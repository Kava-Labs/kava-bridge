// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: relayer/broadcast/v1beta1/broadcast_message.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	github_com_libp2p_go_libp2p_core_peer "github.com/libp2p/go-libp2p-core/peer"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BroadcastMessage is used between peers to wrap messages for each protocol
type BroadcastMessage struct {
	// Unique ID of this message.
	ID string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Original peer.ID that sent this message.
	From github_com_libp2p_go_libp2p_core_peer.ID `protobuf:"bytes,2,opt,name=from,proto3,customtype=github.com/libp2p/go-libp2p-core/peer.ID" json:"from"`
	// If this message is sent by the original broadcaster, where the from field
	// will match the sender peer.ID.
	IsBroadcaster bool `protobuf:"varint,3,opt,name=is_broadcaster,json=isBroadcaster,proto3" json:"is_broadcaster,omitempty"`
	// Selected recipients of the message, to partially restrict the broadcast to
	// a subset a peers.
	RecipientPeerIDs []github_com_libp2p_go_libp2p_core_peer.ID `protobuf:"bytes,4,rep,name=recipient_peer_ids,json=recipientPeerIds,proto3,customtype=github.com/libp2p/go-libp2p-core/peer.ID" json:"recipient_peer_ids,omitempty"`
	// Customtype workaround for not having to use a separate protocgen.sh script
	Payload github_com_gogo_protobuf_types.Any `protobuf:"bytes,5,opt,name=payload,proto3,customtype=github.com/gogo/protobuf/types.Any" json:"payload"`
	// Timestamp when the message was broadcasted.
	Created time.Time `protobuf:"bytes,6,opt,name=created,proto3,stdtime" json:"created"`
	// Seconds after created time until the message expires. This requires
	// roughly synced times between peers
	TTLSeconds uint64 `protobuf:"varint,7,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	// Trace is used to track the message with opentelemetry.
	TraceContext *TraceContext `protobuf:"bytes,8,opt,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty"`
}

func (m *BroadcastMessage) Reset()         { *m = BroadcastMessage{} }
func (m *BroadcastMessage) String() string { return proto.CompactTextString(m) }
func (*BroadcastMessage) ProtoMessage()    {}
func (*BroadcastMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cba85a09bf262990, []int{0}
}
func (m *BroadcastMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BroadcastMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BroadcastMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BroadcastMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastMessage.Merge(m, src)
}
func (m *BroadcastMessage) XXX_Size() int {
	return m.Size()
}
func (m *BroadcastMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastMessage proto.InternalMessageInfo

func (m *BroadcastMessage) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *BroadcastMessage) GetIsBroadcaster() bool {
	if m != nil {
		return m.IsBroadcaster
	}
	return false
}

func (m *BroadcastMessage) GetCreated() time.Time {
	if m != nil {
		return m.Created
	}
	return time.Time{}
}

func (m *BroadcastMessage) GetTTLSeconds() uint64 {
	if m != nil {
		return m.TTLSeconds
	}
	return 0
}

func (m *BroadcastMessage) GetTraceContext() *TraceContext {
	if m != nil {
		return m.TraceContext
	}
	return nil
}

type HelloRequest struct {
	// Peer ID that sent this message, set by sender and validated by receiver.
	PeerID      github_com_libp2p_go_libp2p_core_peer.ID `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3,customtype=github.com/libp2p/go-libp2p-core/peer.ID" json:"peer_id"`
	NodeMoniker string                                   `protobuf:"bytes,2,opt,name=node_moniker,json=nodeMoniker,proto3" json:"node_moniker,omitempty"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cba85a09bf262990, []int{1}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return m.Size()
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetNodeMoniker() string {
	if m != nil {
		return m.NodeMoniker
	}
	return ""
}

func init() {
	proto.RegisterType((*BroadcastMessage)(nil), "relayer.v1beta1.BroadcastMessage")
	proto.RegisterType((*HelloRequest)(nil), "relayer.v1beta1.HelloRequest")
}

func init() {
	proto.RegisterFile("relayer/broadcast/v1beta1/broadcast_message.proto", fileDescriptor_cba85a09bf262990)
}

var fileDescriptor_cba85a09bf262990 = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x4d, 0x6b, 0xd4, 0x50,
	0x14, 0x9d, 0x4c, 0xe3, 0x4c, 0xfb, 0xfa, 0x61, 0x79, 0x14, 0x89, 0x05, 0x93, 0xb1, 0x50, 0x08,
	0x42, 0x13, 0x5a, 0x37, 0xc5, 0x85, 0x68, 0x2c, 0xd2, 0x42, 0x0b, 0xf2, 0x3a, 0xab, 0x6e, 0xc2,
	0x4b, 0x72, 0x1b, 0x1f, 0x4d, 0xf2, 0xe2, 0x7b, 0x6f, 0x8a, 0xf3, 0x07, 0x5c, 0xf7, 0x57, 0xf8,
	0x5b, 0x66, 0xd9, 0xa5, 0xb8, 0x88, 0x92, 0xf9, 0x23, 0x92, 0x2f, 0x3b, 0xb6, 0xb8, 0xd0, 0xdd,
	0x9d, 0x73, 0xcf, 0x3b, 0xe7, 0xce, 0x3d, 0x37, 0x68, 0x5f, 0x40, 0x42, 0xa7, 0x20, 0xdc, 0x40,
	0x70, 0x1a, 0x85, 0x54, 0x2a, 0xf7, 0x7a, 0x3f, 0x00, 0x45, 0xf7, 0xef, 0x10, 0x3f, 0x05, 0x29,
	0x69, 0x0c, 0x4e, 0x2e, 0xb8, 0xe2, 0xf8, 0x71, 0xfb, 0xc4, 0x69, 0x89, 0xdb, 0x5b, 0x31, 0x8f,
	0x79, 0xdd, 0x73, 0xab, 0xaa, 0xa1, 0x6d, 0x3f, 0x8d, 0x39, 0x8f, 0x13, 0x70, 0xeb, 0x5f, 0xc1,
	0xe4, 0xd2, 0xa5, 0xd9, 0xb4, 0x6d, 0x59, 0xf7, 0x5b, 0x8a, 0xa5, 0x20, 0x15, 0x4d, 0xf3, 0x96,
	0xb0, 0xfb, 0xf7, 0xa9, 0x94, 0xa0, 0x61, 0x3b, 0xc9, 0xce, 0x57, 0x1d, 0x6d, 0x7a, 0x1d, 0xe3,
	0xac, 0x19, 0x12, 0x3f, 0x41, 0x7d, 0x16, 0x19, 0xda, 0x48, 0xb3, 0x57, 0xbc, 0x41, 0x59, 0x58,
	0xfd, 0x93, 0x23, 0xd2, 0x67, 0x11, 0x3e, 0x45, 0xfa, 0xa5, 0xe0, 0xa9, 0xd1, 0xaf, 0x3b, 0x87,
	0xb3, 0xc2, 0xea, 0x7d, 0x2f, 0x2c, 0x3b, 0x66, 0xea, 0xe3, 0x24, 0x70, 0x42, 0x9e, 0xba, 0x09,
	0x0b, 0xf2, 0x83, 0xdc, 0x8d, 0xf9, 0x5e, 0x53, 0xed, 0x85, 0x5c, 0x80, 0x9b, 0x03, 0x08, 0xe7,
	0xe4, 0xa8, 0x2c, 0x2c, 0xfd, 0xbd, 0xe0, 0x29, 0xa9, 0x55, 0xf0, 0x2e, 0xda, 0x60, 0xd2, 0xff,
	0x3d, 0x1e, 0x08, 0x63, 0x69, 0xa4, 0xd9, 0xcb, 0x64, 0x9d, 0x49, 0xef, 0x0e, 0xc4, 0x19, 0xc2,
	0x02, 0x42, 0x96, 0x33, 0xc8, 0x94, 0x5f, 0x29, 0xf9, 0x2c, 0x92, 0x86, 0x3e, 0x5a, 0xb2, 0x57,
	0xbc, 0x37, 0xff, 0x68, 0xbf, 0x49, 0x3a, 0xa5, 0x0f, 0x00, 0xe2, 0xe4, 0x48, 0x92, 0x4d, 0xf1,
	0x07, 0x12, 0x49, 0x7c, 0x81, 0x86, 0x39, 0x9d, 0x26, 0x9c, 0x46, 0xc6, 0xa3, 0x91, 0x66, 0xaf,
	0x1e, 0x6c, 0x39, 0xcd, 0xae, 0x9d, 0x6e, 0xd7, 0xce, 0xdb, 0x6c, 0xea, 0xbd, 0x68, 0xff, 0xfd,
	0xce, 0x82, 0x7d, 0x15, 0xdd, 0x42, 0x22, 0xd3, 0x1c, 0x64, 0xc5, 0x25, 0x9d, 0x20, 0x7e, 0x8d,
	0x86, 0xa1, 0x00, 0xaa, 0x20, 0x32, 0x06, 0xb5, 0xf6, 0xf6, 0x03, 0xed, 0x71, 0x97, 0xa3, 0xb7,
	0x5c, 0x39, 0xdc, 0xfc, 0xb0, 0x34, 0xd2, 0x3d, 0xc2, 0x2e, 0x5a, 0x55, 0x2a, 0xf1, 0x25, 0x84,
	0x3c, 0x8b, 0xa4, 0x31, 0x1c, 0x69, 0xb6, 0xee, 0x6d, 0x94, 0x85, 0x85, 0xc6, 0xe3, 0xd3, 0xf3,
	0x06, 0x25, 0x48, 0xa9, 0xa4, 0xad, 0xf1, 0x31, 0x5a, 0xaf, 0xd3, 0xf6, 0x43, 0x9e, 0x29, 0xf8,
	0xac, 0x8c, 0xe5, 0xda, 0xf6, 0x99, 0x73, 0xef, 0x00, 0x9d, 0x71, 0xc5, 0x7a, 0xd7, 0x90, 0x3c,
	0x7d, 0x56, 0x58, 0x1a, 0x59, 0x53, 0x0b, 0xd8, 0xce, 0x17, 0x0d, 0xad, 0x1d, 0x43, 0x92, 0x70,
	0x02, 0x9f, 0x26, 0x20, 0x15, 0x3e, 0x47, 0xc3, 0x36, 0x8d, 0xf6, 0x52, 0x5e, 0xfd, 0xc7, 0x3d,
	0x0c, 0x9a, 0x1c, 0xc8, 0x20, 0xaf, 0xb7, 0x8f, 0x9f, 0xa3, 0xb5, 0x8c, 0x47, 0xe0, 0xa7, 0x3c,
	0x63, 0x57, 0x20, 0x9a, 0x4b, 0x23, 0xab, 0x15, 0x76, 0xd6, 0x40, 0x1e, 0x99, 0x95, 0xa6, 0x76,
	0x5b, 0x9a, 0xda, 0xcf, 0xd2, 0xd4, 0x6e, 0xe6, 0x66, 0xef, 0x76, 0x6e, 0xf6, 0xbe, 0xcd, 0xcd,
	0xde, 0xc5, 0xe1, 0x82, 0xf1, 0x15, 0xbd, 0xa6, 0x7b, 0x09, 0x0d, 0x64, 0x53, 0x05, 0x82, 0x45,
	0x31, 0xb8, 0x0f, 0xbf, 0x89, 0x3a, 0xa4, 0x60, 0x50, 0xaf, 0xff, 0xe5, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xfb, 0x3b, 0xb7, 0x47, 0xcb, 0x03, 0x00, 0x00,
}

func (m *BroadcastMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BroadcastMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BroadcastMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TraceContext != nil {
		{
			size, err := m.TraceContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBroadcastMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.TTLSeconds != 0 {
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(m.TTLSeconds))
		i--
		dAtA[i] = 0x38
	}
	n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Created, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.Created):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintBroadcastMessage(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x32
	{
		size := m.Payload.Size()
		i -= size
		if _, err := m.Payload.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.RecipientPeerIDs) > 0 {
		for iNdEx := len(m.RecipientPeerIDs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size := m.RecipientPeerIDs[iNdEx].Size()
				i -= size
				if _, err := m.RecipientPeerIDs[iNdEx].MarshalTo(dAtA[i:]); err != nil {
					return 0, err
				}
				i = encodeVarintBroadcastMessage(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.IsBroadcaster {
		i--
		if m.IsBroadcaster {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	{
		size := m.From.Size()
		i -= size
		if _, err := m.From.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.ID) > 0 {
		i -= len(m.ID)
		copy(dAtA[i:], m.ID)
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(len(m.ID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HelloRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HelloRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HelloRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NodeMoniker) > 0 {
		i -= len(m.NodeMoniker)
		copy(dAtA[i:], m.NodeMoniker)
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(len(m.NodeMoniker)))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.PeerID.Size()
		i -= size
		if _, err := m.PeerID.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintBroadcastMessage(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintBroadcastMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovBroadcastMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BroadcastMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovBroadcastMessage(uint64(l))
	}
	l = m.From.Size()
	n += 1 + l + sovBroadcastMessage(uint64(l))
	if m.IsBroadcaster {
		n += 2
	}
	if len(m.RecipientPeerIDs) > 0 {
		for _, e := range m.RecipientPeerIDs {
			l = e.Size()
			n += 1 + l + sovBroadcastMessage(uint64(l))
		}
	}
	l = m.Payload.Size()
	n += 1 + l + sovBroadcastMessage(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Created)
	n += 1 + l + sovBroadcastMessage(uint64(l))
	if m.TTLSeconds != 0 {
		n += 1 + sovBroadcastMessage(uint64(m.TTLSeconds))
	}
	if m.TraceContext != nil {
		l = m.TraceContext.Size()
		n += 1 + l + sovBroadcastMessage(uint64(l))
	}
	return n
}

func (m *HelloRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.PeerID.Size()
	n += 1 + l + sovBroadcastMessage(uint64(l))
	l = len(m.NodeMoniker)
	if l > 0 {
		n += 1 + l + sovBroadcastMessage(uint64(l))
	}
	return n
}

func sovBroadcastMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBroadcastMessage(x uint64) (n int) {
	return sovBroadcastMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BroadcastMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBroadcastMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BroadcastMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BroadcastMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.From.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBroadcaster", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsBroadcaster = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecipientPeerIDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			var v github_com_libp2p_go_libp2p_core_peer.ID
			m.RecipientPeerIDs = append(m.RecipientPeerIDs, v)
			if err := m.RecipientPeerIDs[len(m.RecipientPeerIDs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Payload.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Created, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TTLSeconds", wireType)
			}
			m.TTLSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TTLSeconds |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TraceContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TraceContext == nil {
				m.TraceContext = &TraceContext{}
			}
			if err := m.TraceContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBroadcastMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HelloRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBroadcastMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HelloRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HelloRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PeerID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeMoniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeMoniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBroadcastMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBroadcastMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBroadcastMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBroadcastMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBroadcastMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBroadcastMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBroadcastMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBroadcastMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBroadcastMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBroadcastMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBroadcastMessage = fmt.Errorf("proto: unexpected end of group")
)
